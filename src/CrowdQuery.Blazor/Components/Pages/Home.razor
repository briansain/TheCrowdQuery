@page "/"
@using System.Collections.Immutable
@using CrowdQuery.AS.Projections.BasicPromptStateProjection
@* @inject IRequiredActor<AllPromptsActor> allPromptsActor *@
@inject ILogger<Home> _logger
<PageTitle>Home</PageTitle>
<div class="d-flex flex-column">
    @* <MudText Typo="Typo.h1">Welcome to The Crowd Query!</MudText> *@
    <MudText Typo="Typo.h2" class="ma-12 text-center">Welcome to The Crowd Query!</MudText>
    <MudText Typo="Typo.body1" class="text-center">Join a survey or create one</MudText>
    <MudPaper Elevation="2" class="ma-12 pa-8">
        @if (!isLoaded)
        {
            <div class="d-flex flex-column">
                <MudSkeleton Height="150px" SkeletonType="SkeletonType.Text" Animation="Animation.Wave"></MudSkeleton>
                <div style="height: 500px; width:100%" gap-4 class="d-flex flex-row">
                    <MudSkeleton class="flex-auto ma-2" Height="100%" SkeletonType="SkeletonType.Rectangle"
                        Animation="Animation.Wave">
                    </MudSkeleton>
                    <MudSkeleton class="flex-auto ma-2" Height="100%" SkeletonType="SkeletonType.Rectangle"
                        Animation="Animation.Wave"></MudSkeleton>
                    <MudSkeleton class="flex-auto ma-2" Height="100%" SkeletonType="SkeletonType.Rectangle"
                        Animation="Animation.Wave"></MudSkeleton>
                    <MudSkeleton class="flex-auto ma-2" Height="100%" SkeletonType="SkeletonType.Rectangle"
                        Animation="Animation.Wave"></MudSkeleton>
                </div>
            </div>
        }
        else
        {
            <MudDataGrid T="KeyValuePair<string, BasicPromptState>" Items="@dataItems">
                <Columns>
                    <PropertyColumn Property="x => x.Value.prompt" Title="Survey Prompt"></PropertyColumn>
                    <PropertyColumn Property="x => x.Value.answerCount" Title="Num of Choices"></PropertyColumn>
                    <PropertyColumn Property="x => x.Value.totalVotes" Title="Total Votes"></PropertyColumn>
                    <TemplateColumn>
                        <CellTemplate>
                            <MudButton Variant="Variant.Filled" Color="Color.Primary"
                                Href="@($"/prompt/{context.Item.Key}")">View</MudButton>
                        </CellTemplate>
                    </TemplateColumn>
                </Columns>
            </MudDataGrid>
        }
    </MudPaper>
    @* <MudText Typo="Typo.h3">Welcome to The Crowd Query!</MudText> *@
    @* <MudText Typo="Typo.h4">Welcome to The Crowd Query!</MudText> *@
    @*loading stuff....*@
    @*done loading stuff*@
</div>
@code {
    private IActorRef _allPromptsActor = ActorRefs.Nobody;
    private bool isLoaded = false;
    private Dictionary<string, BasicPromptState> dataItems = new Dictionary<string, BasicPromptState>();
    protected async override Task OnInitializedAsync()
    {
        _logger.LogDebug("Starting OnInitializedAsync");
        await Task.Delay(1000);
        @* _allPromptsActor = await allPromptsActor.GetAsync(); *@
        var response = await _allPromptsActor.Ask<Dictionary<string, BasicPromptState>>(new GetBasicPromptState());
        _logger.LogDebug($"Received response from AllPromptsActor: {string.Join(", ", response.Values.Select(r => r.prompt))}");
        dataItems = new Dictionary<string, BasicPromptState>(response);
        isLoaded = true;
    }
}